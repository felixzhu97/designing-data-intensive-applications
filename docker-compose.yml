version: "3.8"

services:
  # PostgreSQL - 关系型数据库
  postgres:
    image: postgres:15
    container_name: ddia_postgres
    environment:
      POSTGRES_DB: ddia_app
      POSTGRES_USER: ddia_user
      POSTGRES_PASSWORD: ddia_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ddia_network

  # Redis - 内存缓存和会话存储
  redis:
    image: redis:7-alpine
    container_name: ddia_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ddia_network

  # MongoDB - 文档型数据库
  mongodb:
    image: mongo:7
    container_name: ddia_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ddia_user
      MONGO_INITDB_ROOT_PASSWORD: ddia_password
      MONGO_INITDB_DATABASE: ddia_app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ddia_network

  # Neo4j - 图数据库
  neo4j:
    image: neo4j:5
    container_name: ddia_neo4j
    environment:
      NEO4J_AUTH: neo4j/ddia_password
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - ddia_network

  # Zookeeper - Kafka依赖
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: ddia_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ddia_network

  # Kafka - 消息队列
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ddia_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - ddia_network

  # Elasticsearch - 搜索引擎
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: ddia_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - ddia_network

  # Kibana - 日志可视化
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: ddia_kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - ddia_network

  # Prometheus - 监控指标收集
  prometheus:
    image: prom/prometheus:latest
    container_name: ddia_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - ddia_network

  # Grafana - 监控可视化
  grafana:
    image: grafana/grafana:latest
    container_name: ddia_grafana
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - ddia_network

  # Flink JobManager - 流处理
  flink-jobmanager:
    image: flink:1.18-scala_2.12
    container_name: ddia_flink_jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
    networks:
      - ddia_network

  # Flink TaskManager - 流处理
  flink-taskmanager:
    image: flink:1.18-scala_2.12
    container_name: ddia_flink_taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 2
    networks:
      - ddia_network

  # MinIO - 对象存储（S3兼容）
  minio:
    image: minio/minio:latest
    container_name: ddia_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ddia_user
      MINIO_ROOT_PASSWORD: ddia_password
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - ddia_network

  # Jaeger - 分布式追踪
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: ddia_jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - ddia_network

  # ClickHouse - 列式数据库（OLAP）
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: ddia_clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_DB: ddia_analytics
      CLICKHOUSE_USER: ddia_user
      CLICKHOUSE_PASSWORD: ddia_password
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - ddia_network

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  neo4j_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:
  minio_data:
  clickhouse_data:

networks:
  ddia_network:
    driver: bridge
